package com.logistiex.billing.data.model;

import com.logistiex.common.data.enricher.ReferenceKey;
import com.logistiex.common.data.model.AuditableBaseEntity;
import com.logistiex.usp.core.data.model.BusinessOrg;
import com.logistiex.usp.core.data.vo.Money;
import com.logistiex.billing.data.enums.PaymentGateway;
import com.logistiex.billing.data.enums.PaymentRequestStatus;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.*;

import java.time.Instant;
import java.util.Map;

@Getter
@Setter
@NoArgsConstructor
@ToString(callSuper = true)
@EqualsAndHashCode(callSuper = true)
public class PaymentRequest extends AuditableBaseEntity<String> {

    @NotBlank
    @ReferenceKey(domainClass = BusinessOrg.class, targetAttribute = "orgCode")
    private String orgCode;
    /**
     * This is the unique transaction ID generated by the merchant
     */
    private String txnId;
    /**
     * This is the amount of the transaction
     */
    @NotNull
    private Money amount;
    /**
     * This is the first name of the customer.
     */
    @NotBlank
    private String firstName;

    private String lastName;
    /**
     * This is the email address of the customer.
     */
    @NotBlank
    private String email;
    /**
     * This is the phone number of the customer.
     */
    @NotBlank
    private String phone;
    /**
     * This is the product information.
     */
    @NotBlank
    private String productInfo;
    /**
     * This is the URL where the customer will be redirected after a successful transaction.
     */
    private String statusUrl;
    /**
     * This is the hash value generated by the merchant with above data
     */
    private String hash;

    private String paymentUrl;

    /**
     * This is the unique transaction ID generated by the payu
     */
    private String gatewayRef;

    /**
     * payment Type eg, CC, NB,
     */
    private String mode;
    /**
     * status Type ->  success, failed
     */
    private PaymentRequestStatus status;

    private Map<String, Object> responseData;

    private Map<String, Object> requestData;

    private Instant transactionTime;

    private PaymentGateway paymentGateway;
    private String bankRefNum;
}